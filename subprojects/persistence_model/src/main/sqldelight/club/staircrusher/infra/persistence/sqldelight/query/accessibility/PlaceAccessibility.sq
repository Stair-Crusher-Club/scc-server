save:
INSERT INTO place_accessibility
VALUES :place_accessibility
ON CONFLICT(id) DO UPDATE SET
    place_id = EXCLUDED.place_id,
    is_first_floor = EXCLUDED.is_first_floor,
    stair_info = EXCLUDED.stair_info,
    has_slope = EXCLUDED.has_slope,
    user_id = EXCLUDED.user_id,
    created_at = EXCLUDED.created_at;

removeAll:
DELETE FROM place_accessibility;

findById:
SELECT *
FROM place_accessibility
WHERE place_accessibility.id = :id;

findByPlaceIds:
SELECT *
FROM place_accessibility
WHERE place_id IN :placeIds;

findByPlaceId:
SELECT *
FROM place_accessibility
WHERE place_id = :placeId;

findByUserId:
SELECT *
FROM place_accessibility
WHERE user_id = :userId;

countByEupMyeonDong:
SELECT COUNT(1)
FROM place_accessibility
    JOIN place ON place.id = place_accessibility.place_id
WHERE place.eup_myeon_dong_id = :eupMyeonDongId;

countByUserId:
SELECT COUNT(1)
FROM place_accessibility
WHERE user_id = :userId;

hasAccessibilityNotRegisteredPlaceInBuilding:
SELECT count(p.id) > 0
FROM place p
INNER JOIN building b ON b.id = :buildingId AND b.id = p.building_id
LEFT OUTER JOIN place_accessibility pa ON p.id = pa.place_id
WHERE pa.id IS NULL;

countAll:
SELECT COUNT(*)
FROM place_accessibility pa;
