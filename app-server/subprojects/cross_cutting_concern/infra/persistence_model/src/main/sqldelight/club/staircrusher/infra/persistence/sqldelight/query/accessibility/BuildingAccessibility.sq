save:
INSERT INTO building_accessibility
VALUES :building_accessibility
ON CONFLICT(id) DO UPDATE SET
    building_id = EXCLUDED.building_id,
    entrance_stair_info = EXCLUDED.entrance_stair_info,
    entrance_image_urls = EXCLUDED.entrance_image_urls,
    has_slope = EXCLUDED.has_slope,
    has_elevator = EXCLUDED.has_elevator,
    elevator_stair_info = EXCLUDED.elevator_stair_info,
    elevator_image_urls = EXCLUDED.elevator_image_urls,
    user_id = EXCLUDED.user_id,
    created_at = EXCLUDED.created_at,
    deleted_at = NULL;

removeAll:
DELETE FROM building_accessibility;

findById:
SELECT *
FROM building_accessibility
WHERE building_accessibility.id = :id
    AND deleted_at IS NULL;

findByBuildingIds:
SELECT *
FROM building_accessibility
WHERE building_id IN :buildingIds
    AND deleted_at IS NULL;

findByBuildingId:
SELECT *
FROM building_accessibility
WHERE building_id = :buildingId
    AND deleted_at IS NULL;

findByPlaceIds:
SELECT building_accessibility.*
FROM building_accessibility
    JOIN building ON building.id = building_accessibility.building_id
    JOIN place ON place.building_id = building.id
WHERE place.id IN :placeIds
    AND building_accessibility.deleted_at IS NULL;

findByUserIdAndCreatedAtBetween:
SELECT ba.*
FROM building_accessibility ba
WHERE
    ba.user_id = :userId
    AND ba.created_at >= :from
    AND ba.created_at <=:to
    AND ba.deleted_at IS NULL;

findByEupMyeonDong:
SELECT building_accessibility.*
FROM building_accessibility
    JOIN building ON building.id = building_accessibility.building_id
WHERE building.eup_myeon_dong_id = :eupMyeonDongId
    AND building_accessibility.deleted_at IS NULL;

updateEntranceImages:
UPDATE building_accessibility
SET entrance_images = :entranceImages
WHERE id = :id;

updateElevatorImages:
UPDATE building_accessibility
SET elevator_images = :elevatorImages
WHERE id = :id;

countByUserId:
SELECT COUNT(1)
FROM building_accessibility
WHERE user_id = :userId
    AND deleted_at IS NULL;

countByUserIdAndCreatedAtBetween:
SELECT COUNT(1)
FROM building_accessibility ba
WHERE
    ba.user_id = :userId
    AND ba.created_at >= :from
    AND ba.created_at <=:to
    AND ba.deleted_at IS NULL;

remove:
UPDATE building_accessibility
SET deleted_at = :deletedAt
WHERE id = :id;
