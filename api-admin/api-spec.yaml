openapi: '3.0.0'
info:
  title: Stair Crusher Club Admin API Specification
  version: '1.0.0'
  description: |
    ## 계단정복지도 서비스의 서버 - 어드민 통신을 위한 API 명세.

defaultContentType: application/json

tags:
  - name: challenge
  - name: accessibility
  - name: banner

paths:
  /login:
    post:
      summary: 로그인을 한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '204':
          description: |
            빈 response body를 내려준다.
            대신 Header의 X-SCC-ACCESS-KEY에 access token을 내려준다.
            클라이언트는 이 토큰을 Bearer auth의 토큰으로 사용하면 된다.

  /clubQuestSummaries/cursored:
    get:
      summary: 커서링 방식의 퀘스트 조회 API
      operationId: getCursoredClubQuestSummaries
      description: 퀘스트 목록을 커서링 방식으로 조회한다.
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          required: false
        - in: query
          name: limit
          description: default 값은 50으로 설정된다.
          schema:
            type: string
          required: false
      responses:
        '200':
          description: 정상적인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCursoredClubQuestSummariesResultDTO'

  /clubQuests/create/dryRun:
    post:
      summary: 주어진 조건(중심 위치, 반경, 퀘스트 분할 숫자 등)으로 퀘스트를 생성하면 어떻게 생성될지 시뮬레이션하여 미리 확인한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                regionType:
                  $ref: '#/components/schemas/ClubQuestCreateRegionTypeDTO'
                centerLocation:
                  $ref: '#/components/schemas/LocationDTO'
                radiusMeters:
                  type: integer
                points:
                  type: array
                  items:
                    $ref: '#/components/schemas/LocationDTO'
                clusterCount:
                  type: integer
                maxPlaceCountPerQuest:
                  type: integer
                useAlreadyCrawledPlace:
                  type: boolean
                  description: |
                    지도 API 기반이 아닌, 이미 크롤링하여 계단정복지도 서버 DB에 캐싱해둔 장소를 기반으로 퀘스트를 생성할지 여부.
                    지정되지 않은 경우, default는 false.
                questTargetPlaceCategories:
                  type: array
                  items:
                    $ref: '#/components/schemas/QuestTargetPlaceCategoryEnumDTO'
              required:
                - clusterCount
                - maxPlaceCountPerQuest
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubQuestCreateDryRunResultItemDTO'

  /clubQuests/create:
    post:
      summary: dryRun 생성 결과를 받아서 실제로 퀘스트를 생성한다.
      operationId: createClubQuest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questNamePrefix:
                  type: string
                purposeType:
                  $ref: '#/components/schemas/ClubQuestPurposeTypeEnumDTO'
                startAt:
                  $ref: '#/components/schemas/EpochMillisTimestamp'
                endAt:
                  $ref: '#/components/schemas/EpochMillisTimestamp'
                dryRunResults:
                  items:
                    $ref: '#/components/schemas/ClubQuestCreateDryRunResultItemDTO'
              required:
                - questNamePrefix
                - purposeType
                - startAt
                - endAt
                - dryRunResults
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClubQuestResponseDTO'

  /clubQuests/createAndNotifyDailyClubQuest:
    post:
      summary: 구글 폼으로 입력 받은 정보를 기반으로 일상 퀘스트를 즉시 생성하고 알림을 보낸다.
      operationId: createAndNotifyDailyClubQuest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndNotifyDailyClubQuestRequestDTO'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAndNotifyDailyClubQuestResponseDTO'

  /clubQuests/{clubQuestId}:
    get:
      summary: 퀘스트를 조회한다.
      parameters:
        - in: path
          name: clubQuestId
          schema:
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClubQuestDTO'
    delete:
      summary: 퀘스트를 삭제한다.
      parameters:
        - in: path
          name: clubQuestId
          schema:
            type: string
          required: true
      responses:
        '204': {}

  /clubQuests/{clubQuestId}/isClosed:
    put:
      summary: 점포의 폐점 여부를 저장한다.
      parameters:
        - in: path
          name: clubQuestId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildingId:
                  type: string
                placeId:
                  type: string
                isClosed:
                  type: boolean
              required:
                - buildingId
                - placeId
                - isClosed
      responses:
        '204':
          description: success to update

  /clubQuests/{clubQuestId}/isNotAccessible:
    put:
      summary: 점포의 접근 가능 여부를 저장한다.
      parameters:
        - in: path
          name: clubQuestId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildingId:
                  type: string
                placeId:
                  type: string
                isNotAccessible:
                  type: boolean
              required:
                - buildingId
                - placeId
                - isNotAccessible
      responses:
        '204':
          description: success to update

  /accessibilityAllowedRegions:
    post:
      summary: 정보 등록 가능 지역을 생성한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessibilityAllowedRegionRequestDTO'
      responses:
        '204': {}

    get:
      summary: 정보 등록 가능 지역 목록을 조회한다.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessibilityAllowedRegionDTO'

  /accessibilityAllowedRegions/{regionId}:
    parameters:
      - in: path
        name: regionId
        schema:
          type: string
        required: true

    get:
      summary: 정보 등록 가능 지역을 조회한다.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessibilityAllowedRegionDTO'

    delete:
      summary: 정보 등록 가능 지역을 삭제한다.
      responses:
        '204': {}

  /challenges:
    get:
      summary: 챌린지 목록을 조회한다.
      tags:
        - challenge
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminListChallengesResponseDTO'

    post:
      summary: 챌린지를 생성한다.
      tags:
        - challenge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCreateChallengeRequestDTO'
      responses:
        '204': {}

  /challenges/{challengeId}:
    parameters:
      - in: path
        name: challengeId
        schema:
          type: string
        required: true

    get:
      summary: 챌린지를 조회한다.
      tags:
        - challenge
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminChallengeDTO'

    delete:
      summary: 챌린지를 삭제한다.
      tags:
        - challenge
      responses:
        '204': {}

  /accessibilities/search:
    get:
      parameters:
        - in: query
          name: placeName
          schema:
            type: string
          required: false
        - in: query
          name: createdAtFromLocalDate
          description: yyyy-MM-dd 형식
          schema:
            type: string
          required: false
        - in: query
          name: createdAtToLocalDate
          description: yyyy-MM-dd 형식
          schema:
            type: string
          required: false
        - in: query
          name: cursor
          schema:
            type: string
          required: false
        - in: query
          name: limit
          description: default 값은 20으로 설정된다.
          schema:
            type: string
          required: false
      operationId: searchAccessibilities
      summary: 장소 & 건물 정보를 검색한다.
      tags:
        - accessibility
      responses:
        '200':
          description: 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSearchAccessibilitiesResultDTO'

  /place-accessibilities/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true

    put:
      operationId: updatePlaceAccessibility
      summary: 장소 정보를 업데이트한다.
      tags:
        - accessibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdatePlaceAccessibilityRequestDTO'
      responses:
        204:
          description: 업데이트 성공

    delete:
      operationId: deletePlaceAccessibility
      summary: 장소 정보를 삭제한다.
      tags:
        - accessibility
      responses:
        204:
          description: 삭제 성공

  /building-accessibilities/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true

    put:
      operationId: updateBuildingAccessibility
      summary: 건물 정보를 업데이트한다.
      tags:
        - accessibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateBuildingAccessibilityRequestDTO'
      responses:
        204:
          description: 업데이트 성공

    delete:
      operationId: deleteBuildingAccessibility
      summary: 건물 정보를 삭제한다.
      tags:
        - accessibility
      responses:
        204:
          description: 삭제 성공

  /places/startCrawling:
    post:
      operationId: startPlaceCrawling
      summary: 지정된 지역 내의 장소를 지도 API를 통해 크롤링해서 계단정복지도 서버 DB에 캐싱한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartPlaceCrawlingRequestDTO'
      responses:
        '204': {}

  /closedPlaceCandidates:
    get:
      operationId: listClosedPlaceCandidates
      summary: 폐업이 추정되는 장소의 리스트를 조회한다.
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          required: false
        - in: query
          name: limit
          description: default 값은 50으로 설정된다.
          schema:
            type: string
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminListClosedPlaceCandidatesResponseDTO'

  /closedPlaceCandidates/{id}:
    get:
      operationId: getClosedPlaceCandidate
      summary: 폐업이 추정되는 장소를 조회한다.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminClosedPlaceCandidateDTO'

  /closedPlaceCandidates/{id}/accept:
    put:
      operationId: acceptClosedPlaceCandidate
      summary: 해당 장소를 폐업 상태로 변경한다.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminClosedPlaceCandidateDTO'

  /closedPlaceCandidates/{id}/ignore:
    put:
      operationId: ignoreClosedPlaceCandidate
      summary: 해당 장소를 폐업의 폐업 추정을 무시한다.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminClosedPlaceCandidateDTO'

  /banners:
    get:
      operationId: adminAllListBanners
      summary: 전체 배너 목록을 조회한다.
      tags:
        - banner
      responses:
        '200':
          description: 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminListAllBannersResponseDTO'

    post:
      operationId: adminCreateBanner
      summary: 배너를 생성한다.
      tags:
        - banner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCreateBannerRequestDTO'
      responses:
        '204':
          description: 생성 성공

  /banners/home-banner:
    get:
      operationId: adminListHomeBanners
      summary: 앱의 홈에 노출되는 것과 동일한 목록 & 순서의 배너를 보여준다.
      tags:
        - banner
      responses:
        '200':
          description: 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminListHomeBannersResponseDTO'

  /banners/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true

    delete:
      operationId: adminDeleteBanner
      summary: 배너를 삭제한다.
      tags:
        - banner
      responses:
        204:
          description: 삭제 성공

  /image-upload-urls:
    post:
      summary: 배너 생성 등의 상황에서 이미지를 업로드하기 위한 URL을 받아 온다.
      operationId: adminCreateImageUploadUrls
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCreateImageUploadUrlsRequestDTO'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreateImageUploadUrlsResponseDTO'

  /user/sendPushNotification:
    post:
      summary: 유저들에게 push notification을 보낸다.
      operationId: adminSendPushNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSendPushNotificationRequestDto'
      responses:
        '200': {}

components:
  # Reusable schemas (data models)
  schemas:
    EpochMillisTimestamp:
      description: 특정 시각을 표현하기 위한 모델.
      type: object
      properties:
        value:
          type: integer
          format: int64
      required:
        - value

    LocationDTO:
      description: 위치를 위경도로 표현하기 위한 모델.
      type: object
      properties:
        lng:
          type: number
          format: double
        lat:
          type: number
          format: double
      required:
        - lng
        - lat

    ClubQuestCreateRegionTypeDTO:
      type: string
      enum:
        - CIRCLE
        - POLYGON

    QuestTargetPlaceCategoryEnumDTO:
      type: string
      enum:
        - RESTAURANT
        - CAFE
        - MARKET
        - HOSPITAL
        - PHARMACY
        - CONVENIENCE_STORE

    ClubQuestCreateDryRunResultItemDTO:
      description: 퀘스트 생성 시뮬레이션 결과. 각 퀘스트마다 1개의 아이템이 반환된다.
      properties:
        questNamePostfix:
          type: string
        questCenterLocation:
          $ref: '#/components/schemas/LocationDTO'
        targetBuildings:
          type: array
          items:
            $ref: '#/components/schemas/ClubQuestTargetBuildingDTO'
      required:
        - questNamePostfix
        - questCenterLocation
        - targetBuildings

    ClubQuestPurposeTypeEnumDTO:
      type: string
      enum:
        - CRUSHER_CLUB
        - DAILY_CLUB
        - COLLABO_CLUB
        - ESG_PARTNERS

    GetCursoredClubQuestSummariesResultDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/ClubQuestSummaryDTO'
        cursor:
          type: string
          description: 없으면 다음 페이지가 없다는 의미.
      required:
        - list

    ClubQuestSummaryDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        purposeType:
          $ref: '#/components/schemas/ClubQuestPurposeTypeEnumDTO'
        startAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        endAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        shortenedUrl:
          type: string
      required:
        - id
        - name
        - purposeType
        - startAt
        - endAt

    ClubQuestDTO:
      description: 퀘스트.
      properties:
        id:
          type: string
        name:
          type: string
        purposeType:
          $ref: '#/components/schemas/ClubQuestPurposeTypeEnumDTO'
        startAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        endAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        buildings:
          type: array
          items:
            $ref: '#/components/schemas/ClubQuestTargetBuildingDTO'
        shortenedUrl:
          type: string
      required:
        - id
        - name
        - purposeType
        - startAt
        - endAt
        - buildings

    ClubQuestTargetBuildingDTO:
      description: 퀘스트 대상이 되는 건물 정보.
      properties:
        buildingId:
          type: string
        name:
          type: string
        location:
          $ref: '#/components/schemas/LocationDTO'
        places:
          type: array
          items:
            $ref: '#/components/schemas/ClubQuestTargetPlaceDTO'
      required:
        - buildingId
        - name
        - location
        - places

    ClubQuestTargetPlaceDTO:
      description: 퀘스트 대상이 되는 점포 정보.
      properties:
        placeId:
          type: string
          description: 점포의 ID.
        buildingId:
          type: string
          description: 건물의 ID.
        name:
          type: string
          description: 점포의 human-readable한 이름.
        location:
          $ref: '#/components/schemas/LocationDTO'
        isConquered:
          type: boolean
          description: 장소가 정복됐는지 여부.
        isClosedExpected:
          type: boolean
          description: 장소가 폐업으로 추정되는지 여부.
        isClosed:
          type: boolean
          description: 장소가 실제로 폐업됐는지 여부.
        isNotAccessible:
          type: boolean
          description: 장소에 접근 가능한지 여부.
      required:
        - name
        - location
        - placeId
        - buildingId
        - isConquered
        - isClosedExpected
        - isClosed
        - isNotAccessible

    CreateClubQuestResponseDTO:
      properties:
        clubQuestIds:
          type: array
          items:
            type: string
      required:
        - clubQuestIds

    CreateAndNotifyDailyClubQuestRequestDTO:
      type: object
      properties:
        requesterName:
          type: string
        requesterPhoneNumber:
          type: string
        centerLocationPlaceName:
          type: string
        maxPlaceCountPerQuest:
          type: string
      required:
        - requesterName
        - requesterPhoneNumber
        - centerLocationPlaceName
        - maxPlaceCountPerQuest

    CreateAndNotifyDailyClubQuestResponseDTO:
      type: object
      properties:
        clubQuestId:
          type: string
        url:
          type: string
      required:
        - clubQuestId
        - url

    CreateAccessibilityAllowedRegionRequestDTO:
      properties:
        name:
          type: string
        boundaryVertices:
          type: array
          items:
            $ref: '#/components/schemas/LocationDTO'
      required:
        - name
        - boundaryVertices

    AccessibilityAllowedRegionDTO:
      properties:
        id:
          type: string
        name:
          type: string
        boundaryVertices:
          type: array
          items:
            $ref: '#/components/schemas/LocationDTO'
      required:
        - id
        - type
        - boundaryVertices

    AdminListChallengesResponseDTO:
      type: array
      items:
        $ref: '#/components/schemas/AdminChallengeDTO'

    AdminChallengeDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isPublic:
          type: boolean
        invitationCode:
          type: string
        passcode:
          type: string
        isComplete:
          type: boolean
        startsAtMillis:
          type: integer
          format: int64
        endsAtMillis:
          type: integer
          format: int64
        goal:
          type: integer
          format: int32
        milestones:
          type: array
          items:
            type: integer
            format: int32
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/AdminChallengeConditionDTO'
        createdAtMillis:
          type: integer
          format: int64
        updatedAtMillis:
          type: integer
          format: int64
        description:
          type: string
      required:
        - id
        - name
        - isPublic
        - isComplete
        - startsAtMillis
        - goal
        - milestones
        - conditions
        - createdAtMillis
        - updatedAtMillis
        - description

    AdminChallengeConditionDTO:
      type: object
      properties:
        addressCondition:
          $ref: '#/components/schemas/AdminChallengeAddressConditionDTO'
        actionCondition:
          $ref: '#/components/schemas/AdminChallengeActionConditionDTO'
      required: []

    AdminChallengeAddressConditionDTO:
      type: object
      properties:
        rawEupMyeonDongs:
          type: array
          items:
            type: string
      required: []

    AdminChallengeActionConditionDTO:
      type: object
      properties:
        types:
          type: array
          items:
            $ref: '#/components/schemas/AdminChallengeActionConditionTypeEnumDTO'
      required: []

    AdminChallengeActionConditionTypeEnumDTO:
      type: string
      enum:
        - BUILDING_ACCESSIBILITY
        - BUILDING_ACCESSIBILITY_COMMENT
        - PLACE_ACCESSIBILITY
        - PLACE_ACCESSIBILITY_COMMENT

    AdminCreateChallengeRequestDTO:
      type: object
      properties:
        name:
          type: string
        isPublic:
          type: boolean
        invitationCode:
          type: string
        passcode:
          type: string
        startsAtMillis:
          type: integer
          format: int64
        endsAtMillis:
          type: integer
          format: int64
        goal:
          type: integer
          format: int32
        milestones:
          type: array
          items:
            type: integer
            format: int32
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/AdminChallengeConditionDTO'
        description:
          type: string
      required:
        - name
        - isPublic
        - startsAtMillis
        - goal
        - milestones
        - conditions
        - description

    AdminSearchAccessibilitiesResultDTO:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminAccessibilityDTO'
        cursor:
          type: string
          description: 없으면 다음 페이지가 없다는 의미.
      required:
        - items

    AdminUpdatePlaceAccessibilityRequestDTO:
      type: object
      properties:
        isFirstFloor:
          type: boolean
        stairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        hasSlope:
          type: boolean
        floors:
          type: array
          items:
            type: integer
            format: int32
        isStairOnlyOption:
          type: boolean
        stairHeightLevel:
          $ref: '#/components/schemas/AdminStairHeightLevel'
        entranceDoorTypes:
          type: array
          items:
            $ref: '#/components/schemas/AdminEntranceDoorType'
      required:
        - isFirstFloor
        - stairInfo
        - hasSlope

    AdminUpdateBuildingAccessibilityRequestDTO:
      type: object
      properties:
        entranceStairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        hasSlope:
          type: boolean
        hasElevator:
          type: boolean
        elevatorStairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        entranceStairHeightLevel:
          $ref: '#/components/schemas/AdminStairHeightLevel'
        entranceDoorTypes:
          type: array
          items:
            $ref: '#/components/schemas/AdminEntranceDoorType'
        elevatorStairHeightLevel:
          $ref: '#/components/schemas/AdminStairHeightLevel'

      required:
        - entranceStairInfo
        - hasSlope
        - hasElevator
        - elevatorStairInfo

    AdminAccessibilityDTO:
      type: object
      properties:
        placeAccessibility:
          $ref: '#/components/schemas/AdminPlaceAccessibilityDTO'
        buildingAccessibility:
          $ref: '#/components/schemas/AdminBuildingAccessibilityDTO'
      required:
        - placeAccessibility

    AdminPlaceAccessibilityDTO:
      type: object
      properties:
        id:
          type: string
        floors:
          type: array
          items:
            type: integer
        isFirstFloor:
          type: boolean
        isStairOnlyOption:
          type: boolean
        imageUrls:
          deprecated: true
          type: array
          items:
            type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/AdminImageDTO'
        stairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        stairHeightLevel:
          $ref: '#/components/schemas/AdminStairHeightLevel'
        hasSlope:
          type: boolean
        entranceDoorTypes:
          type: array
          items:
            $ref: '#/components/schemas/AdminEntranceDoorType'
        placeName:
          type: string
        registeredUserName:
          type: string
          description: 익명으로 등록되었으면 null.
        createdAtMillis:
          type: integer
          format: int64
      required:
        - id
        - isFirstFloor
        - stairInfo
        - hasSlope
        - placeName
        - imageUrls
        - images
        - createdAtMillis

    AdminBuildingAccessibilityDTO:
      type: object
      properties:
        id:
          type: string
        entranceStairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        entranceStairHeightLevel:
          $ref: '#/components/schemas/AdminStairHeightLevel'
        entranceDoorTypes:
          type: array
          items:
            $ref: '#/components/schemas/AdminEntranceDoorType'
        entranceImageUrls:
          deprecated: true
          type: array
          items:
            type: string
        entranceImages:
          type: array
          items:
            $ref: '#/components/schemas/AdminImageDTO'
        hasSlope:
          type: boolean
        hasElevator:
          type: boolean
        elevatorStairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        elevatorStairHeightLevel:
          $ref: '#/components/schemas/AdminStairHeightLevel'
        elevatorImageUrls:
          deprecated: true
          type: array
          items:
            type: string
        elevatorImages:
          type: array
          items:
            $ref: '#/components/schemas/AdminImageDTO'
        buildingName:
          type: string
        registeredUserName:
          type: string
          description: 익명으로 등록되었으면 null.
        createdAtMillis:
          type: integer
          format: int64
      required:
        - id
        - entranceStairInfo
        - entranceImageUrls
        - entranceImages
        - hasSlope
        - hasElevator
        - elevatorStairInfo
        - elevatorImageUrls
        - elevatorImages
        - createdAtMillis

    AdminStairInfoDTO:
      type: string
      enum:
        - UNDEFINED # e.g. 엘리베이터가 아예 없는 경우, 엘리베이터 계단 정보는 UNDEFINED로 올린다.
        - NONE
        - ONE
        - TWO_TO_FIVE
        - OVER_SIX

    AdminStairHeightLevel:
      type: string
      enum:
        - HALF_THUMB
        - THUMB
        - OVER_THUMB

    AdminEntranceDoorType:
      type: string
      enum:
        - None
        - Hinged
        - Sliding
        - Revolving
        - Automatic
        - ETC

    AdminImageDTO:
      type: object
      properties:
        imageUrl:
          type: string
        thumbnailUrl:
          type: string
      required:
        - imageUrl

    StartPlaceCrawlingRequestDTO:
      properties:
        boundaryVertices:
          type: array
          items:
            $ref: '#/components/schemas/LocationDTO'
      required:
        - boundaryVertices

    AdminListClosedPlaceCandidatesResponseDTO:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminClosedPlaceCandidateDTO'
        cursor:
          type: string
          description: 없으면 다음 페이지가 없다는 의미.
          required:
            - list

    AdminClosedPlaceCandidateDTO:
      type: object
      properties:
        id:
          type: string
        placeId:
          type: string
        name:
          type: string
        address:
          type: string
        closedAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        acceptedAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        ignoredAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
      required:
        - id
        - placeId

    AdminListAllBannersResponseDTO:
      type: object
      properties:
        banners:
          type: array
          items:
            $ref: '#/components/schemas/AdminBannerDTO'
      required:
        - banners

    AdminBannerDTO:
      type: object
      properties:
        id:
          type: string
        loggingKey:
          type: string
        imageUrl:
          type: string
        clickPageUrl:
          type: string
        clickPageTitle:
          type: string
        startAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        endAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        displayOrder:
          type: integer
          format: int32
      required:
        - id
        - loggingKey
        - imageUrl
        - clickPageUrl
        - clickPageTitle
        - displayOrder

    AdminListHomeBannersResponseDTO:
      type: object
      properties:
        banners:
          type: array
          items:
            $ref: '#/components/schemas/AdminBannerDTO'
      required:
        - banners

    AdminCreateBannerRequestDTO:
      type: object
      properties:
        loggingKey:
          type: string
        imageUrl:
          type: string
        clickPageUrl:
          type: string
        clickPageTitle:
          type: string
        startAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        endAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
        displayOrder:
          type: integer
          format: int32
      required:
        - loggingKey
        - imageUrl
        - clickPageUrl
        - clickPageTitle
        - displayOrder

    AdminCreateImageUploadUrlsRequestDTO:
      properties:
        purposeType:
          $ref: '#/components/schemas/AdminImageUploadPurposeTypeDTO'
        count:
          type: integer
          description: 업로드할 이미지 수.
        filenameExtension:
          type: string
          description: 업로드할 이미지의 확장자. '.'을 붙이지 말아야 한다. e.g. png, jpeg 등.
      required:
        - purposeType
        - count
        - filenameExtension

    AdminImageUploadPurposeTypeDTO:
      type: string
      enum:
        - BANNER

    AdminCreateImageUploadUrlsResponseDTO:
      type: object
      properties:
        urls:
          type: array
          items:
            $ref: '#/components/schemas/AdminImageUploadUrlDTO'
      required:
        - urls

    AdminImageUploadUrlDTO:
      type: object
      properties:
        url:
          type: string
        expireAt:
          $ref: '#/components/schemas/EpochMillisTimestamp'
      required:
        - url
        - expireAt

    AdminSendPushNotificationRequestDto:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
        notification:
          type: object
          properties:
            title:
              type: string
            body:
              type: string
            deepLink:
              type: string
          required:
            - body
      required:
        - userIds
        - notification
