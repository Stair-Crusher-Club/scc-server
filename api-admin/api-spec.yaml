openapi: '3.0.0'
info:
  title: Stair Crusher Club Admin API Specification
  version: '1.0.0'
  description: |
    ## 계단정복지도 서비스의 서버 - 어드민 통신을 위한 API 명세.

defaultContentType: application/json

tags:
  - name: challenge
  - name: accessibility

paths:
  /login:
    post:
      summary: 로그인을 한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '204':
          description: |
            빈 response body를 내려준다.
            대신 Header의 X-SCC-ACCESS-KEY에 access token을 내려준다.
            클라이언트는 이 토큰을 Bearer auth의 토큰으로 사용하면 된다.

  # TODO: pagination
  /clubQuests:
    get:
      summary: 퀘스트 전체 목록을 반환한다.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name

  /clubQuestSummaries/cursored:
    get:
      summary: 커서링 방식의 퀘스트 조회 API
      operationId: getCursoredClubQuestSummaries
      description: 퀘스트 목록을 커서링 방식으로 조회한다.
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          required: false
        - in: query
          name: limit
          description: default 값은 50으로 설정된다.
          schema:
            type: string
          required: false
      responses:
        '200':
          description: 정상적인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCursoredClubQuestSummariesResultDTO'

  /clubQuests/create/dryRun:
    post:
      summary: 주어진 조건(중심 위치, 반경, 퀘스트 분할 숫자 등)으로 퀘스트를 생성하면 어떻게 생성될지 시뮬레이션하여 미리 확인한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                regionType:
                  $ref: '#/components/schemas/ClubQuestCreateRegionTypeDTO'
                centerLocation:
                  $ref: '#/components/schemas/LocationDTO'
                radiusMeters:
                  type: integer
                points:
                  type: array
                  items:
                    $ref: '#/components/schemas/LocationDTO'
                clusterCount:
                  type: integer
                maxPlaceCountPerQuest:
                  type: integer
              required:
                - regionType
                - clusterCount
                - maxPlaceCountPerQuest
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClubQuestCreateDryRunResultItemDTO'

  /clubQuests/create:
    post:
      summary: dryRun 생성 결과를 받아서 실제로 퀘스트를 생성한다.
      operationId: createClubQuest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questNamePrefix:
                  type: string
                dryRunResults:
                  items:
                    $ref: '#/components/schemas/ClubQuestCreateDryRunResultItemDTO'
              required:
                - questNamePrefix
                - dryRunResults
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClubQuestResponseDTO'

  /clubQuests/{clubQuestId}:
    get:
      summary: 퀘스트를 조회한다.
      parameters:
        - in: path
          name: clubQuestId
          schema:
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClubQuestDTO'
    delete:
      summary: 퀘스트를 삭제한다.
      parameters:
        - in: path
          name: clubQuestId
          schema:
            type: string
          required: true
      responses:
        '204': {}

  /clubQuests/{clubQuestId}/isClosed:
    put:
      summary: 점포의 폐점 여부를 저장한다.
      parameters:
        - in: path
          name: clubQuestId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildingId:
                  type: string
                placeId:
                  type: string
                isClosed:
                  type: boolean
              required:
                - buildingId
                - placeId
                - isClosed
      responses:
        '204':
          description: success to update

  /clubQuests/{clubQuestId}/isNotAccessible:
    put:
      summary: 점포의 접근 가능 여부를 저장한다.
      parameters:
        - in: path
          name: clubQuestId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildingId:
                  type: string
                placeId:
                  type: string
                isNotAccessible:
                  type: boolean
              required:
                - buildingId
                - placeId
                - isNotAccessible
      responses:
        '204':
          description: success to update

  /accessibilityAllowedRegions:
    post:
      summary: 정보 등록 가능 지역을 생성한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessibilityAllowedRegionRequestDTO'
      responses:
        '204': {}

    get:
      summary: 정보 등록 가능 지역 목록을 조회한다.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessibilityAllowedRegionDTO'

  /accessibilityAllowedRegions/{regionId}:
    parameters:
      - in: path
        name: regionId
        schema:
          type: string
        required: true

    get:
      summary: 정보 등록 가능 지역을 조회한다.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessibilityAllowedRegionDTO'

    delete:
      summary: 정보 등록 가능 지역을 삭제한다.
      responses:
        '204': {}

  /challenges:
    get:
      summary: 챌린지 목록을 조회한다.
      tags:
        - challenge
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminListChallengesResponseDTO'

    post:
      summary: 챌린지를 생성한다.
      tags:
        - challenge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCreateChallengeRequestDTO'
      responses:
        '204': {}

  /challenges/{challengeId}:
    parameters:
      - in: path
        name: challengeId
        schema:
          type: string
        required: true

    get:
      summary: 챌린지를 조회한다.
      tags:
        - challenge
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminChallengeDTO'

    delete:
      summary: 챌린지를 삭제한다.
      tags:
        - challenge
      responses:
        '204': {}

  /accessibilities/search:
    get:
      parameters:
        - in: query
          name: placeName
          schema:
            type: string
          required: false
        - in: query
          name: createdAtFromLocalDate
          description: yyyy-MM-dd 형식
          schema:
            type: string
          required: false
        - in: query
          name: createdAtToLocalDate
          description: yyyy-MM-dd 형식
          schema:
            type: string
          required: false
        - in: query
          name: cursor
          schema:
            type: string
          required: false
        - in: query
          name: limit
          description: default 값은 20으로 설정된다.
          schema:
            type: string
          required: false
      operationId: searchAccessibilities
      summary: 장소 & 건물 정보를 검색한다.
      tags:
        - accessibility
      responses:
        '200':
          description: 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSearchAccessibilitiesResultDTO'

  /place-accessibilities/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true

    delete:
      operationId: deletePlaceAccessibility
      summary: 장소 정보를 삭제한다.
      tags:
        - accessibility
      responses:
        204:
          description: 삭제 성공

  /building-accessibilities/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true

    delete:
      operationId: deleteBuildingAccessibility
      summary: 건물 정보를 삭제한다.
      tags:
        - accessibility
      responses:
        204:
          description: 삭제 성공

components:
  # Reusable schemas (data models)
  schemas:
    LocationDTO:
      description: 위치를 위경도로 표현하기 위한 모델.
      type: object
      properties:
        lng:
          type: number
          format: double
        lat:
          type: number
          format: double
      required:
        - lng
        - lat

    ClubQuestCreateRegionTypeDTO:
      type: string
      enum:
        - CIRCLE
        - POLYGON

    ClubQuestCreateDryRunResultItemDTO:
      description: 퀘스트 생성 시뮬레이션 결과. 각 퀘스트마다 1개의 아이템이 반환된다.
      properties:
        questNamePostfix:
          type: string
        questCenterLocation:
          $ref: '#/components/schemas/LocationDTO'
        targetBuildings:
          type: array
          items:
            $ref: '#/components/schemas/ClubQuestTargetBuildingDTO'
      required:
        - questNamePostfix
        - questCenterLocation
        - targetBuildings

    GetCursoredClubQuestSummariesResultDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/ClubQuestSummaryDTO'
        cursor:
          type: string
          description: 없으면 다음 페이지가 없다는 의미.
      required:
        - list

    ClubQuestSummaryDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    ClubQuestDTO:
      description: 퀘스트.
      properties:
        id:
          type: string
        name:
          type: string
        buildings:
          type: array
          items:
            $ref: '#/components/schemas/ClubQuestTargetBuildingDTO'
      required:
        - id
        - name
        - buildings

    ClubQuestTargetBuildingDTO:
      description: 퀘스트 대상이 되는 건물 정보.
      properties:
        buildingId:
          type: string
        name:
          type: string
        location:
          $ref: '#/components/schemas/LocationDTO'
        places:
          type: array
          items:
            $ref: '#/components/schemas/ClubQuestTargetPlaceDTO'
      required:
        - buildingId
        - name
        - location
        - places

    ClubQuestTargetPlaceDTO:
      description: 퀘스트 대상이 되는 점포 정보.
      properties:
        placeId:
          type: string
          description: 점포의 ID.
        buildingId:
          type: string
          description: 건물의 ID.
        name:
          type: string
          description: 점포의 human-readable한 이름.
        location:
          $ref: '#/components/schemas/LocationDTO'
        isConquered:
          type: boolean
          description: 장소가 정복됐는지 여부.
        isClosedExpected:
          type: boolean
          description: 장소가 폐업으로 추정되는지 여부.
        isClosed:
          type: boolean
          description: 장소가 실제로 폐업됐는지 여부.
        isNotAccessible:
          type: boolean
          description: 장소에 접근 가능한지 여부.
      required:
        - name
        - location
        - placeId
        - buildingId
        - isConquered
        - isClosedExpected
        - isClosed
        - isNotAccessible

    CreateClubQuestResponseDTO:
      properties:
        clubQuestIds:
          type: array
          items:
            type: string
      required:
        - clubQuestIds

    CreateAccessibilityAllowedRegionRequestDTO:
      properties:
        name:
          type: string
        boundaryVertices:
          type: array
          items:
            $ref: '#/components/schemas/LocationDTO'
      required:
        - name
        - boundaryVertices

    AccessibilityAllowedRegionDTO:
      properties:
        id:
          type: string
        name:
          type: string
        boundaryVertices:
          type: array
          items:
            $ref: '#/components/schemas/LocationDTO'
      required:
        - id
        - type
        - boundaryVertices

    AdminListChallengesResponseDTO:
      type: array
      items:
        $ref: '#/components/schemas/AdminChallengeDTO'

    AdminChallengeDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isPublic:
          type: boolean
        invitationCode:
          type: string
        passcode:
          type: string
        isComplete:
          type: boolean
        startsAtMillis:
          type: integer
          format: int64
        endsAtMillis:
          type: integer
          format: int64
        goal:
          type: integer
          format: int32
        milestones:
          type: array
          items:
            type: integer
            format: int32
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/AdminChallengeConditionDTO'
        createdAtMillis:
          type: integer
          format: int64
        updatedAtMillis:
          type: integer
          format: int64
        description:
          type: string
      required:
        - id
        - name
        - isPublic
        - isComplete
        - startsAtMillis
        - goal
        - milestones
        - conditions
        - createdAtMillis
        - updatedAtMillis
        - description

    AdminChallengeConditionDTO:
      type: object
      properties:
        addressCondition:
          $ref: '#/components/schemas/AdminChallengeAddressConditionDTO'
        actionCondition:
          $ref: '#/components/schemas/AdminChallengeActionConditionDTO'
      required: []

    AdminChallengeAddressConditionDTO:
      type: object
      properties:
        rawEupMyeonDongs:
          type: array
          items:
            type: string
      required: []

    AdminChallengeActionConditionDTO:
      type: object
      properties:
        types:
          type: array
          items:
            $ref: '#/components/schemas/AdminChallengeActionConditionTypeEnumDTO'
      required: []

    AdminChallengeActionConditionTypeEnumDTO:
      type: string
      enum:
        - BUILDING_ACCESSIBILITY
        - BUILDING_ACCESSIBILITY_COMMENT
        - PLACE_ACCESSIBILITY
        - PLACE_ACCESSIBILITY_COMMENT

    AdminCreateChallengeRequestDTO:
      type: object
      properties:
        name:
          type: string
        isPublic:
          type: boolean
        invitationCode:
          type: string
        passcode:
          type: string
        startsAtMillis:
          type: integer
          format: int64
        endsAtMillis:
          type: integer
          format: int64
        goal:
          type: integer
          format: int32
        milestones:
          type: array
          items:
            type: integer
            format: int32
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/AdminChallengeConditionDTO'
        description:
          type: string
      required:
        - name
        - isPublic
        - startsAtMillis
        - goal
        - milestones
        - conditions
        - description

    AdminSearchAccessibilitiesResultDTO:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminAccessibilityDTO'
        cursor:
          type: string
          description: 없으면 다음 페이지가 없다는 의미.
      required:
        - items

    AdminAccessibilityDTO:
      type: object
      properties:
        placeAccessibility:
          $ref: '#/components/schemas/AdminPlaceAccessibilityDTO'
        buildingAccessibility:
          $ref: '#/components/schemas/AdminBuildingAccessibilityDTO'
      required:
        - placeAccessibility

    AdminPlaceAccessibilityDTO:
      type: object
      properties:
        id:
          type: string
        isFirstFloor:
          type: boolean
        stairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        hasSlope:
          type: boolean
        imageUrls:
          type: array
          items:
            type: string
        placeName:
          type: string
        registeredUserName:
          type: string
          description: 익명으로 등록되었으면 null.
        createdAtMillis:
          type: integer
          format: int64
      required:
        - id
        - isFirstFloor
        - stairInfo
        - hasSlope
        - placeName
        - imageUrls
        - createdAtMillis

    AdminBuildingAccessibilityDTO:
      type: object
      properties:
        id:
          type: string
        entranceStairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        entranceImageUrls:
          type: array
          items:
            type: string
        hasSlope:
          type: boolean
        hasElevator:
          type: boolean
        elevatorStairInfo:
          $ref: '#/components/schemas/AdminStairInfoDTO'
        elevatorImageUrls:
          type: array
          items:
            type: string
        buildingName:
          type: string
        registeredUserName:
          type: string
          description: 익명으로 등록되었으면 null.
        createdAtMillis:
          type: integer
          format: int64
      required:
        - id
        - entranceStairInfo
        - entranceImageUrls
        - hasSlope
        - hasElevator
        - elevatorStairInfo
        - elevatorImageUrls
        - createdAtMillis

    AdminStairInfoDTO:
      type: string
      enum:
        - UNDEFINED # e.g. 엘리베이터가 아예 없는 경우, 엘리베이터 계단 정보는 UNDEFINED로 올린다.
        - NONE
        - ONE
        - TWO_TO_FIVE
        - OVER_SIX
